package ${schemaDefinition.packageName};

import java.io.File;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.fasterxml.jackson.databind.JsonNode;
import com.google.common.collect.ArrayListMultimap;
import com.google.common.collect.Lists;
import com.google.common.collect.Multimap;
import com.palantir.atlasdb.cleaner.api.OnCleanupTask;
import com.palantir.atlasdb.persister.JsonNodePersister;
import com.palantir.atlasdb.protos.generated.TableMetadataPersistence.ValueByteOrder;
import com.palantir.atlasdb.schema.AtlasSchema;
import com.palantir.atlasdb.schema.Namespace;
import com.palantir.atlasdb.table.description.IndexDefinition;
import com.palantir.atlasdb.table.description.CodeGeneratingIndexDefinition.IndexType;
import com.palantir.atlasdb.table.description.Schema;
import com.palantir.atlasdb.table.description.TableDefinition;
import com.palantir.atlasdb.table.description.TableMetadata;
import com.palantir.atlasdb.table.description.ValueType;

public class ${display.capitalize(${schemaDefinition.schemaName})}Schema implements Schema {
    
    @Override
    public TableDefinition getTableDefinition(String tableName) {
        return null;
    }

    public Map<String, TableMetadata> getAllTablesAndIndexMetadata() {
        return Collections.emptyMap();
    }

    public Map<String, TableDefinition> getTableDefinitions() {
        return Collections.emptyMap();
    }

    public Map<String, IndexDefinition> getIndexDefinitions() {
        return Collections.emptyMap();
    }

    public Set<String> getAllIndexes() {
        return Collections.emptySet();
    }

    public IndexDefinition getIndex(String indexName) {
        return null;
    }

    public IndexDefinition getIndexForShortName(String indexName) {
        return null;
    }

    public void validate() {
        // do nothing
    }

    @Override
    public Namespace getNamespace() {
        return Namespace.DEFAULT_NAMESPACE;
    }

    public Multimap<String, OnCleanupTask> getCleanupTasksByTable() {
        return ArrayListMultimap.create();
    }
}